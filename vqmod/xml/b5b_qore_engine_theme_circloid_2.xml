<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<id>Base5Builder - Circloid 2.0</id>
	<version>2.3.0.0</version>
	<vqmver>2.6.0</vqmver>
	<author>base5builder.com</author>
	<!-- Used to alter all controller files at the same time -->
	<file name="admin/controller/common/header.php,admin/controller/common/footer.php,admin/controller/common/dashboard.php,admin/controller/catalog/product.php,admin/controller/catalog/review.php,admin/controller/sale/order.php,admin/controller/customer/customer.php,admin/controller/marketing/marketing.php,admin/controller/tool/upload.php,admin/controller/report/online.php,admin/controller/report/report.php,admin/controller/report/statistics.php,admin/controller/b5b_qore_engine/*.php,admin/controller/common/*.php,admin/controller/extension/module/b5b_qore_engine.php">
		<!-- <operation error="skip">
			<search position="after"><![CDATA[
				$pagination->total
				]]></search>
			<add><![CDATA[
				$data['b5b_qore_engine']['list_total_count'] = $pagination->total;
				]]></add>
		</operation> -->
	</file>
	<!-- Adds dashboard widgets -->
	<file name="admin/controller/common/dashboard.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['footer'] = $this->load->controller('common/footer');
				]]></search>
			<add><![CDATA[
				$data['users_online_mini'] = $this->load->controller('b5b_qore_engine/dash_users_online_mini');
				$data['total_orders_mini'] = $this->load->controller('b5b_qore_engine/dash_total_orders_mini');
				$data['total_sales_mini'] = $this->load->controller('b5b_qore_engine/dash_total_sales_mini');
				$data['total_customers_mini'] = $this->load->controller('b5b_qore_engine/dash_total_customers_mini');
				$data['completed_orders_mini'] = $this->load->controller('b5b_qore_engine/dash_completed_orders_mini');
				$data['processing_orders_mini'] = $this->load->controller('b5b_qore_engine/dash_processing_orders_mini');
				$data['returned_orders_mini'] = $this->load->controller('b5b_qore_engine/dash_returned_orders_mini');
				$data['product_views_mini'] = $this->load->controller('b5b_qore_engine/dash_product_views_mini');

				$data['chart_most_viewed_products_medium'] = $this->load->controller('b5b_qore_engine/dash_chart_most_viewed_products_medium');

				$data['chart_sales_analytics_large'] = $this->load->controller('b5b_qore_engine/dash_chart_sales_analytics_large');
				$data['latest_orders_large'] = $this->load->controller('b5b_qore_engine/dash_latest_orders_large');
				$data['map_medium'] = $this->load->controller('b5b_qore_engine/dash_map_medium');
				$data['activity_medium'] = $this->load->controller('b5b_qore_engine/dash_activity_medium');
				$data['chart_top_customer_medium'] = $this->load->controller('b5b_qore_engine/dash_chart_top_customer_medium');
				$data['chart_top_product_medium'] = $this->load->controller('b5b_qore_engine/dash_chart_top_product_medium');
				]]></add>
		</operation>
	</file>
	<!-- Add icons to H1 headers -->
	<file name="admin/view/template/catalog/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-cube"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/customers/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-user"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/design/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-brush"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/error/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-exclamation"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/extension/*.twig,admin/view/template/extension/*/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-triple-points"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/localisation/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-sound-on"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/mail/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-mail"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/marketing/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-star"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/report/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-bars"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/sale/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-dollar"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/setting/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-settings"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/tool/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-settings"></i> ]]></add>
		</operation>
	</file>
	<file name="admin/view/template/user/*.twig">
		<operation error="skip">
			<search position="iafter"><![CDATA[<h1>]]></search>
			<add><![CDATA[<i class="icon  icon-user"></i> ]]></add>
		</operation>
	</file>
	<!-- Update datetimepicker for DateTimePicker 4.17.47 & Jquery 3 -->
	<file name="admin/view/template/*/*.twig,admin/view/template/*/*/*.twig">
		<operation error="skip">
			<search position="ibefore"><![CDATA[pickDate]]></search>
			<add><![CDATA[//]]></add>
		</operation>
		<operation error="skip">
			<search position="ibefore"><![CDATA[pickTime]]></search>
			<add><![CDATA[//]]></add>
		</operation>
		<operation error="skip">
			<search position="iafter"><![CDATA[input-group-btn]]></search>
			<add><![CDATA[ input-group-addon]]></add>
		</operation>
		<operation error="skip">
			<search position="iafter"><![CDATA[input-group-btn]]></search>
			<add><![CDATA[ input-group-addon]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[language: '{{ datepicker }}']]></search>
			<add><![CDATA[// language: '{{ datepicker }}']]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[<script src="view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script>]]></search>
			<add><![CDATA[<!-- <script src="view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js" type="text/javascript"></script> -->]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[<link href="view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css" type="text/css" rel="stylesheet" media="screen" />]]></search>
			<add><![CDATA[<!-- <link href="view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css" type="text/css" rel="stylesheet" media="screen" /> -->]]></add>
		</operation>
	</file>
	<file name="admin/controller/common/header.php,admin/controller/common/footer.php,admin/controller/common/dashboard.php,admin/controller/catalog/product.php,admin/controller/catalog/review.php,admin/controller/sale/order.php,admin/controller/customer/customer.php,admin/controller/marketing/marketing.php,admin/controller/tool/upload.php,admin/controller/report/online.php,admin/controller/report/report.php,admin/controller/report/statistics.php,admin/controller/b5b_qore_engine/*.php,admin/controller/common/*.php,admin/controller/extension/module/b5b_qore_engine.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->load->model('b5b_qore_engine/general/settings');
				]]></search>
			<add><![CDATA[

				/* B5B - BETA FEATURE - START */
				// Check if page has been added to compatibility list

				$data['custom_page_is_compatible'] = FALSE;

				if(isset($this->request->get['route'])){;
					/*
					// Temporarily disabled. Will be enabled once feature is completed
					$custom_compatible_pages = unserialize($this->model_b5b_qore_engine_general_settings->getSettings('compatible_page_route_circloid'));

					if($custom_compatible_pages && in_array($this->request->get['route'], $custom_compatible_pages)){
						$data['custom_page_is_compatible'] = TRUE;
					}
					*/
					$custom_compatible_pages = "";
				}

				/* B5B - BETA FEATURE - END */
				]]></add>
		</operation>
	</file>
	<file name="admin/controller/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['logout'] = $this->url->link('common/logout', 'token=' . $this->session->data['token'], true);
				]]></search>
			<add><![CDATA[
				
				$this->load->model('user/user');
		
				$this->load->model('tool/image');
		
				$user_info = $this->model_user_user->getUser($this->user->getId());
		
				if ($user_info) {
					$data['firstname'] = $user_info['firstname'];
					$data['lastname'] = $user_info['lastname'];
		
					$data['user_group'] = $user_info['user_group'];
		
					if (is_file(DIR_IMAGE . $user_info['image'])) {
						$data['image'] = $this->model_tool_image->resize($user_info['image'], 45, 45);
					} else {
						$data['image'] = '';
					}
				} else {
					$data['firstname'] = '';
					$data['lastname'] = '';
					$data['user_group'] = '';
					$data['image'] = '';
				}

				// Adds link for the logo
				$data['menu']['href'] = $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], true);
				]]></add>
		</operation>
	</file>
	<file name="admin/model/extension/dashboard/map.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT COUNT(*) AS total, SUM(o.total) AS amount, c.iso_code_2 FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "country` c ON (o.payment_country_id = c.country_id) WHERE o.order_status_id IN('" . (int)implode(',', $implode) . "') GROUP BY o.payment_country_id");
				]]></search>
			<add><![CDATA[
				$query = $this->db->query("SELECT COUNT(*) AS total, SUM(o.total) AS amount, c.iso_code_2, c.name FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "country` c ON (o.payment_country_id = c.country_id) WHERE o.order_status_id IN('" . (int)implode(',', $implode) . "') GROUP BY o.payment_country_id");
				]]></add>
		</operation>
	</file>
	<file name="admin/model/extension/dashboard/sale.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				class ModelExtensionDashboardSale extends Model {
				]]></search>
			<add><![CDATA[

					public function circloid_getTotalSalesByDay($order_status_id) {
						$sale_data = array();

						for ($i = 0; $i < 24; $i++) {
							$sale_data[$i] = array(
								'hour'  => $i,
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT SUM(total) as total, HOUR(date_added) AS hour FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) = DATE(NOW()) GROUP BY HOUR(date_added) ORDER BY date_added ASC");
						}else{
							$query = $this->db->query("SELECT SUM(total) as total, HOUR(date_added) AS hour FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND DATE(date_added) = DATE(NOW()) GROUP BY HOUR(date_added) ORDER BY date_added ASC");
						}

						foreach ($query->rows as $result) {
							$sale_data[$result['hour']] = array(
								'hour'  => $result['hour'],
								'total' => $result['total']
							);
						}

						return $sale_data;
					}

					public function circloid_getTotalSalesByWeek($order_status_id) {
						$sale_data = array();

						$date_start = strtotime('-' . date('w') . ' days');

						for ($i = 0; $i < 7; $i++) {
							$date = date('Y-m-d', $date_start + ($i * 86400));

							$sale_data[date('w', strtotime($date))] = array(
								'day'   => date('D', strtotime($date)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT SUM(total) as total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND WEEKOFYEAR(date_added) = WEEKOFYEAR(NOW()) AND YEAR(date_added) = YEAR(NOW()) GROUP BY DAYOFWEEK(date_added)");
						}else{
							$query = $this->db->query("SELECT SUM(total) as total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND WEEKOFYEAR(date_added) = WEEKOFYEAR(NOW()) AND YEAR(date_added) = YEAR(NOW()) GROUP BY DAYOFWEEK(date_added)");
						}

						foreach ($query->rows as $result) {
							$sale_data[date('w', strtotime($result['date_added']))] = array(
								'day'   => date('D', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $sale_data;
					}

					public function circloid_getTotalSalesByMonth($order_status_id) {
						$sale_data = array();

						for ($i = 1; $i <= date('t'); $i++) {
							$date = date('Y') . '-' . date('m') . '-' . $i;

							$sale_data[date('j', strtotime($date))] = array(
								'day'   => date('d', strtotime($date)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT SUM(total) as total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND MONTH(date_added) = MONTH(NOW()) AND YEAR(date_added) = YEAR(NOW()) GROUP BY DATE(date_added)");
						}else{
							$query = $this->db->query("SELECT SUM(total) as total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND MONTH(date_added) = MONTH(NOW()) AND YEAR(date_added) = YEAR(NOW()) GROUP BY DATE(date_added)");
						}

						foreach ($query->rows as $result) {
							$sale_data[date('j', strtotime($result['date_added']))] = array(
								'day'   => date('d', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $sale_data;
					}

					public function circloid_getTotalSalesByYear($order_status_id) {
						$sale_data = array();

						for ($i = 1; $i <= 12; $i++) {
							$sale_data[$i] = array(
								'month' => date('M', mktime(0, 0, 0, $i)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT SUM(total) as total, MONTHNAME(date_added) as date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND YEAR(date_added) = YEAR(NOW()) GROUP BY MONTH(date_added)");
						}else{
							$query = $this->db->query("SELECT SUM(total) as total, MONTHNAME(date_added) as date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND YEAR(date_added) = YEAR(NOW()) GROUP BY MONTH(date_added)");
						}

						foreach ($query->rows as $result) {
							$sale_data[date('n', strtotime($result['date_added']))] = array(
								'month' => date('M', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $sale_data;
					}

					public function getTotalOrdersAll($data = array()) {
						$sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0'";

						if (!empty($data['filter_date_added'])) {
							$sql .= " AND DATE(date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
						}

						$query = $this->db->query($sql);

						return $query->row['total'];
					}

					public function getTotalOrdersByCountryFull() {
						$query = $this->db->query("SELECT COUNT(*) AS total, SUM(o.total) AS amount, c.name, c.iso_code_2 FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "country` c ON (o.payment_country_id = c.country_id) WHERE o.order_status_id > '0' GROUP BY o.payment_country_id");

						return $query->rows;
					}

					public function circloid_getTotalOrdersByDay($order_status_id) {

						$order_data = array();

						for ($i = 0; $i < 24; $i++) {
							$order_data[$i] = array(
								'hour'  => $i,
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT COUNT(*) AS total, HOUR(date_added) AS hour FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) = DATE(NOW()) GROUP BY HOUR(date_added) ORDER BY date_added ASC");
						}else{
							$query = $this->db->query("SELECT COUNT(*) AS total, HOUR(date_added) AS hour FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND DATE(date_added) = DATE(NOW()) GROUP BY HOUR(date_added) ORDER BY date_added ASC");
						}

						foreach ($query->rows as $result) {
							$order_data[$result['hour']] = array(
								'hour'  => $result['hour'],
								'total' => $result['total']
							);
						}

						return $order_data;
					}

					public function circloid_getTotalOrdersByWeek($order_status_id) {
						$order_data = array();

						$date_start = strtotime('-' . date('w') . ' days');

						for ($i = 0; $i < 7; $i++) {
							$date = date('Y-m-d', $date_start + ($i * 86400));

							$order_data[date('w', strtotime($date))] = array(
								'day'   => date('D', strtotime($date)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) >= DATE('" . $this->db->escape(date('Y-m-d', $date_start)) . "') GROUP BY DAYNAME(date_added)");
						}else{
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND DATE(date_added) >= DATE('" . $this->db->escape(date('Y-m-d', $date_start)) . "') GROUP BY DAYNAME(date_added)");
						}

						foreach ($query->rows as $result) {
							$order_data[date('w', strtotime($result['date_added']))] = array(
								'day'   => date('D', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $order_data;
					}

					public function circloid_getTotalOrdersByMonth($order_status_id) {
						$order_data = array();

						for ($i = 1; $i <= date('t'); $i++) {
							$date = date('Y') . '-' . date('m') . '-' . $i;

							$order_data[date('j', strtotime($date))] = array(
								'day'   => date('d', strtotime($date)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) >= '" . $this->db->escape(date('Y') . '-' . date('m') . '-1') . "' GROUP BY DATE(date_added)");
						}else{
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id = '" . $order_status_id . "' AND DATE(date_added) >= '" . $this->db->escape(date('Y') . '-' . date('m') . '-1') . "' GROUP BY DATE(date_added)");
						}

						foreach ($query->rows as $result) {
							$order_data[date('j', strtotime($result['date_added']))] = array(
								'day'   => date('d', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $order_data;
					}

					public function circloid_getTotalOrdersByYear($order_status_id) {
						$order_data = array();

						for ($i = 1; $i <= 12; $i++) {
							$order_data[$i] = array(
								'month' => date('M', mktime(0, 0, 0, $i)),
								'total' => 0
							);
						}

						if($order_status_id == 'all'){
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND YEAR(date_added) = YEAR(NOW()) GROUP BY MONTH(date_added)");
						}else{
							$query = $this->db->query("SELECT COUNT(*) AS total, date_added FROM `" . DB_PREFIX . "order` WHERE  order_status_id = '" . $order_status_id . "' AND YEAR(date_added) = YEAR(NOW()) GROUP BY MONTH(date_added)");
						}

						foreach ($query->rows as $result) {
							$order_data[date('n', strtotime($result['date_added']))] = array(
								'month' => date('M', strtotime($result['date_added'])),
								'total' => $result['total']
							);
						}

						return $order_data;
					}

				]]></add>
		</operation>
	</file>
</modification>